/**
 * Collections of useful mixins. 
 * Happy coding!
 *
 * @author TrueAgency
 */

/**
 * Attempt to fix text rendering issue
 */
@mixin text-optimize()
{
	text-rendering: optimizeLegibility !important;
	-webkit-font-smoothing: antialiased !important;
}

/**
 * Set border radius
 */
@mixin borderRadius($size)
{
	-webkit-border-radius: $size;
	-moz-border-radius: $size;
	border-radius:$size;
}

/**
 * Disable select
 */
@mixin noSelect()
{
	-webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
}

/**
 * The missing transform from bootstrap mixins
 */
@mixin transform($transform) 
{
	-webkit-transform: $transform;
	-ms-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

@mixin icomoon($content) {
  @extend [class*=" icon-"];
  content: $content;
}
@mixin btn-reset() {
  box-shadow: none;
  outline: none !important;
  border: 0;
}


///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  
  @if $fallback {
    font-size: $fallback;
  }
  
  font-size: $responsive;
}